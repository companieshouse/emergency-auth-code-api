// Code generated by MockGen. DO NOT EDIT.
// Source: dao/service.go

package mocks

import (
	models "github.com/companieshouse/emergency-auth-code-api/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAuthcodeDAOService is a mock of AuthcodeDAOService interface
type MockAuthcodeDAOService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthcodeDAOServiceMockRecorder
}

// MockAuthcodeDAOServiceMockRecorder is the mock recorder for MockAuthcodeDAOService
type MockAuthcodeDAOServiceMockRecorder struct {
	mock *MockAuthcodeDAOService
}

// NewMockAuthcodeDAOService creates a new mock instance
func NewMockAuthcodeDAOService(ctrl *gomock.Controller) *MockAuthcodeDAOService {
	mock := &MockAuthcodeDAOService{ctrl: ctrl}
	mock.recorder = &MockAuthcodeDAOServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAuthcodeDAOService) EXPECT() *MockAuthcodeDAOServiceMockRecorder {
	return m.recorder
}

// CompanyHasAuthCode mocks base method
func (m *MockAuthcodeDAOService) CompanyHasAuthCode(companyNumber string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CompanyHasAuthCode", companyNumber)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CompanyHasAuthCode indicates an expected call of CompanyHasAuthCode
func (mr *MockAuthcodeDAOServiceMockRecorder) CompanyHasAuthCode(companyNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CompanyHasAuthCode", reflect.TypeOf((*MockAuthcodeDAOService)(nil).CompanyHasAuthCode), companyNumber)
}

// MockOfficerDAOService is a mock of OfficerDAOService interface
type MockOfficerDAOService struct {
	ctrl     *gomock.Controller
	recorder *MockOfficerDAOServiceMockRecorder
}

// MockOfficerDAOServiceMockRecorder is the mock recorder for MockOfficerDAOService
type MockOfficerDAOServiceMockRecorder struct {
	mock *MockOfficerDAOService
}

// NewMockOfficerDAOService creates a new mock instance
func NewMockOfficerDAOService(ctrl *gomock.Controller) *MockOfficerDAOService {
	mock := &MockOfficerDAOService{ctrl: ctrl}
	mock.recorder = &MockOfficerDAOServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOfficerDAOService) EXPECT() *MockOfficerDAOServiceMockRecorder {
	return m.recorder
}

// GetCompanyOfficers mocks base method
func (m *MockOfficerDAOService) GetCompanyOfficers(arg0 string) (*models.CompanyOfficers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompanyOfficers", arg0)
	ret0, _ := ret[0].(*models.CompanyOfficers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCompanyOfficers indicates an expected call of GetCompanyOfficers
func (mr *MockOfficerDAOServiceMockRecorder) GetCompanyOfficers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompanyOfficers", reflect.TypeOf((*MockOfficerDAOService)(nil).GetCompanyOfficers), arg0)
}
